/*
 * Script Name: KNIGHT TRAINING CHECKBOX
 * Version: v1.3
 * Last Updated: 2025-02-24
 * Author: K I N G S
 * Author Contact: +55 48-98824-2773
 */

/*--------------------------------------------------------------------------------------
 * This script can NOT be cloned and modified without permission from the script author.
 --------------------------------------------------------------------------------------*/

// Função para carregar seleções salvas
function loadKnightSelections() {
    return JSON.parse(localStorage.getItem('knightSelections') || '{}');
}

// Função para salvar seleções
function saveKnightSelections(selections) {
    localStorage.setItem('knightSelections', JSON.stringify(selections));
}

// Executa apenas na tela de paladinos
if (window.location.href.includes('screen=knight')) {
    // Carrega seleções salvas
    const selections = loadKnightSelections();
    
    // Seleciona todos os blocos de paladinos (ajuste o selector conforme a estrutura HTML real)
    const knightBlocks = $('.knight-box'); // Substitua '.knight-box' pelo selector correto da sua interface

    knightBlocks.each(function() {
        const knightName = $(this).find('.knight-name').text(); // Ajuste para o selector do nome do paladino
        const knightId = $(this).data('knight-id') || knightName; // Use o ID do paladino ou um identificador único

        // Adiciona checkbox ao lado do nome
        $(this).find('.knight-name').after(`
            <input type="checkbox" class="knight-select" data-knight="${knightId}" 
                ${selections[knightId] ? 'checked' : ''}>
        `);
    });

    // Evento para checkboxes
    $('.knight-select').on('change', function() {
        const knightId = $(this).data('knight');
        const isChecked = $(this).is(':checked');
        
        // Atualiza seleções salvas
        const currentSelections = loadKnightSelections();
        if (isChecked) {
            currentSelections[knightId] = true;
        } else {
            delete currentSelections[knightId];
        }
        saveKnightSelections(currentSelections);

        // Inicia treinamento automático se marcado
        if (isChecked) {
            startTraining(knightId);
        } else {
            stopTraining(knightId); // Opcional: para interromper treinamento se desmarcado
        }
    });

    // Função para iniciar treinamento
    function startTraining(knightId) {
        const knight = Object.values(BuildingStatue.knights).find(k => k.id === knightId || k.name === knightId);
        if (!knight) return;

        // Usa a primeira duração disponível como padrão (ajuste conforme necessário)
        const durationIndex = 0; // Ou use uma configuração salva, como no script anterior
        TribalWars.post(
            game_data.link_base.replace('amp;screen=', '') + 'screen=statue&ajaxaction=regimen',
            null,
            {
                knight: knightId,
                regimen: knight.usable_regimens[durationIndex].id,
            },
            function() {
                UI.SuccessMessage(`Training started for knight ${knight.name || knightId}`);
                // Agenda próximo treinamento
                setTimeout(() => {
                    if (loadKnightSelections()[knightId]) {
                        startTraining(knightId);
                    }
                }, knight.usable_regimens[durationIndex].duration * 1000);
            },
            function(r) {
                console.error(r);
                UI.ErrorMessage(`Failed to start training for ${knight.name || knightId}`);
            }
        );
    }

    // Função para parar treinamento (opcional)
    function stopTraining(knightId) {
        // Aqui você pode adicionar lógica para cancelar o treinamento, se o jogo permitir
        UI.InfoMessage(`Training stopped for knight ${knightId}`);
    }

    // Inicia treinamento automático para paladinos já selecionados
    Object.keys(selections).forEach(knightId => {
        if (selections[knightId]) {
            startTraining(knightId);
        }
    });
} else {
    UI.InfoMessage('Knight Training running in background - Switch to Knight screen for configuration');
}
