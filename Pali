var countapikey = "fastKeypress";
function hitCountApi() {
    $.getJSON(`https://api.countapi.xyz/hit/fmthemasterScripts/${countapikey}`, function(response) {
        console.log(`This script has been run ${response.value} times`);
    });
}
hitCountApi();

var url = document.URL;
if (url.indexOf('screen=am_farm') == -1 || keyPressRunning) {
    var url = window.location.search.replace("?", "")
    var linkParts = url.split("&");
    var sitterPart = $.grep(linkParts, (obj) => obj.indexOf("t=") != -1)
    var villagePart = $.grep(linkParts, (obj) => obj.indexOf("village=") != -1)
    var newURL = window.location.pathname + "?" + sitterPart.concat(villagePart, ["screen=am_farm"]).join("&");
    window.open(newURL, "_self")
    throw ("going to LA");
}

var keyPressRunning = true;
var isAutoRunning = false; // Nova variável para controle da automação
var autoInterval = null;  // Nova variável para armazenar o intervalo da automação

var debugData = "";
var incrementalSwitchPage = 0;
var cookieName = "fakeypress";
var version = "1.99";
var updateversion = 1.7;
var keycodes = {
    "a": 65,
    "b": 66,
    "c": 67,
    "skip": 74,
    "right": 39,
    "left": 37,
    "master": 90
};
var keyedits = {
    "a": false,
    "b": false,
    "c": false,
    "skip": false,
    "left": false,
    "right": false
};
var key;
var keydown = false;
var last_keypress = 0;
var timeout_keypress = 500;
var cansend = true;
var sitter = "";
if (window.game_data.player.sitter != "0") {
    sitter = "t=" + window.game_data.player.id + "&";
}
var link = ["https://" + window.location.host + "/game.php?" + sitter + "village=", "&screen=am_farm"];
var pos = {
    s: {
        order: 0,
        dir: 1,
        loadp: 2,
        fp: 3,
        lp: 4,
        remaxes: 5,
        remyellow: 6,
        remred: 7,
        remblue: 8,
        remgreen: 9,
        remredy: 10,
        remredb: 11,
        remattsince: 12,
        MaxNbAttacks: 13
    }
};
var faTable, userkeys, userset, totalrows, countedrows = 0;
var pagesLoad = 0;
var pagesLoaded = true,
    pageLoading = false,
    start = false;

/****************************1st called function****************************/
function run() {
    if (!(window.game_data.screen === 'am_farm')) {
        getFA();
    } else {
        if (checkCookie()) {
            if ($.cookie(cookieName).indexOf('{') == -1) {
                alert("Essayer de changer le nom de la variable cookieName. Si le problÃƒÂ¨me persiste, rendez vous sur le forum.");
                dodokeys = $.cookie(cookieName).split(',');
                resetCookie();
                userkeys[0] = dodokeys[0];
                userkeys[1] = dodokeys[1];
                userkeys[2] = dodokeys[2];
                userkeys[3] = dodokeys[3];
                userkeys[4] = dodokeys[5];
                userkeys[5] = dodokeys[4];
                keycodes.a = parseInt(userkeys[0]);
                keycodes.b = parseInt(userkeys[1]);
                keycodes.c = parseInt(userkeys[2]);
                keycodes.skip = parseInt(userkeys[3]);
                keycodes.left = parseInt(userkeys[5]);
                keycodes.right = parseInt(userkeys[4]);
                setCookie(cookieName, 180);
            } else if (parseFloat($.cookie(cookieName).split("{")[1].split("}")[0]) <= updateversion) {
                UI.ErrorMessage("A cause d'une mise a jour, les donnÃƒÆ’Ã‚Â©es ont ÃƒÆ’Ã‚Â©tÃƒÆ’Ã‚Â©s perdues. Veuillez recommencer les assignations de touches.", 5000);
                resetCookie();
            } else {
                userkeys = $.cookie(cookieName).split("[")[1].split("]")[0].split(",");
                userset = $.cookie(cookieName).split("[")[2].split("]")[0].split(",");
                keycodes.a = parseInt(userkeys[0]);
                keycodes.b = parseInt(userkeys[1]);
                keycodes.c = parseInt(userkeys[2]);
                keycodes.skip = parseInt(userkeys[3]);
                keycodes.left = parseInt(userkeys[5]);
                keycodes.right = parseInt(userkeys[4]);
            }
        } else {
            UI.SuccessMessage("Bienvenue sur le Fakeypress de Crimsoni", 1000);
            resetCookie();
        }
        faTable = $('#plunder_list');
        if (userset[pos.s.loadp] === "1") {
            removeFirstPage();
            showPages();
        } else {
            initStuff();
        }
    }
}

/****************************Script initialisation****************************/
function initStuff() {
    removeBadStuff();
    addRowRemover();
    makeItPretty();
    addPressKey();
    addTable();
    doSettings();
    Accountmanager.initTooltips();
}

/****************************Remover of undesired orders****************************/
function removeBadStuff() {
    for (var i = 1; i < $(faTable).find("tr").length; i++) {
        var row = $(faTable).find("tr").eq(i);
        if (userset[pos.s.remyellow] == 1 && $(row).html().indexOf('yellow.png') != -1) {
            $(row).remove();
            i--;
        } else if (userset[pos.s.remredy] == 1 && $(row).html().indexOf('red_yellow.png') != -1) {
            $(row).remove();
            i--;
        } else if (userset[pos.s.remredb] == 1 && $(row).html().indexOf('red_blue.png') != -1) {
            $(row).remove();
            i--;
        } else if (userset[pos.s.remred] == 1 && $(row).html().indexOf('red.png') != -1) {
            $(row).remove();
            i--;
        } else if (userset[pos.s.remgreen] == 1 && $(row).html().indexOf('green.png') != -1) {
            $(row).remove();
            i--;
        } else if (userset[pos.s.remblue] == 1 && $(row).html().indexOf('blue.png') != -1) {
            $(row).remove();
            i--;
        }
    }
}

/****************************Display number of attacks****************************/
function addRowRemover() {
    $('#plunder_list tr:gt(0)').each(function(i) {
        $(this).children("td").each(function(j) {
            switch (j) {
                case 3:
                    break;
                case 8:
                    setOnclick($(this));
                    break;
                case 9:
                    setOnclick($(this));
                    break;
                case 10:
                    setOnclick($(this));
                    break;
            }
        });
    });
}

/****************************Change row CSS****************************/
function makeItPretty() {
    $('h3').eq(0).text("Farm Assistant*");
    $('.row_a').css("background-color", "rgb(216, 255, 216)");
    $('#plunder_list').find('tr:gt(0)').each(function(index) {
        $(this).removeClass('row_a');
        $(this).removeClass('row_b');
        if (index % 2 == 0) {
            $(this).addClass('row_a');
        } else {
            $(this).addClass('row_b');
        }
    });
}

/****************************Key events binding****************************/
function addPressKey() {
    window.onkeypress = function(e) {
        last_keypress = performance.now();
    };
    window.onkeydown = function(e) {
        last_keypress = performance.now();
        key = e.keyCode ? e.keyCode : e.which;
        keydown = true;
        if (key == keycodes.left) {
            if (pagesLoaded) getNewVillage("p");
        } else if (key == keycodes.right) {
            if (pagesLoaded) getNewVillage("n");
        }
        let interval = setInterval(() => {
            if (performance.now() - last_keypress < timeout_keypress) {
                checkKeys();
                if (!keydown) clearInterval(interval);
            } else clearInterval(interval);
        }, 5);
    };
    window.onkeyup = function(e) {
        checkKeys();
        keydown = false;
    };

    function checkKeys() {
        if (keyedits.a) {
            keycodes.a = key;
            refresh();
        } else if (keyedits.b) {
            keycodes.b = key;
            refresh();
        } else if (keyedits.c) {
            keycodes.c = key;
            refresh();
        } else if (keyedits.skip) {
            keycodes.skip = key;
            refresh();
        } else if (keyedits.left) {
            keycodes.left = key;
            refresh();
        } else if (keyedits.right) {
            keycodes.right = key;
            refresh();
        } else if (key == keycodes.skip) {
            $(faTable).find("tr").eq(1).remove();
        } else if (cansend) {
            if (key == keycodes.c) {
                click('c');
                doTime(198);
            } else if (key == keycodes.a) {
                click('a');
                doTime(198);
            } else if (key == keycodes.b) {
                click('b');
                doTime(198);
            }
        }
    }
}

function click(letter) {
    for (h = 1; h < $(faTable).find("tr").length; h++) {
        var row = $(faTable).find("tr").eq(h);
        var button = $('a[class*="farm_icon_' + letter + '"]', row).eq(0);
        if ($(button).html() != null) {
            if ($(button).attr('class').indexOf('farm_icon_disabled') == -1) {
                $(button).click();
                return;
            }
        }
    }
}

/****************************Build Script Menu****************************/
function addTable() {
    if ($('#divFAPress')) {
        $('#divFAPress').remove();
        $('#divFAPressSettings').remove();
    }
    $("#contentContainer h3").eq(0).after($(
        "<div id='divFAPress' class='vis' style='font-size:12px;width:40%'><table id='faKeyPress' class='vis' style='width:100%' cellspacing='0'><thead><tr><th colspan='10' style='font-size:16px;text-align:center'>FA Keypress v" +
        version +
        " by<br> Crimsoni & Sytten</tr></thead>" +
        "<tbody>" +
        "<tr id='buttonRow'>" +
        "<th colspan='1' valign='middle'>Boutons: <img src='https://media.innogamescdn.com/com_DS_FR/Scripts/Pillage/questionmark.png' title='Clique sur un bouton puis une touche du clavier pour modifier' width='13' height='13' alt='' class='tooltip' />" +
        "<td colspan='1' align='center'>" +
        "<a href='#' onclick='return setEditMode(0)' id='buttona' class='tooltip farm_icon farm_icon_a' title='Bouton A'>" +
        "<td colspan='1' align='center'>" +
        "<a href='#' onclick='return setEditMode(1)' id='buttonb' class='tooltip farm_icon farm_icon_b' title='Bouton B'>" +
        "<td colspan='1' align='center'>" +
        "<a href='#' onclick='return setEditMode(2)' id='buttonc' class='tooltip farm_icon farm_icon_c' title='Bouton C'>" +
        "<td colspan='1' align='center'>" +
        "<input class='btn tooltip' type='button' value='Ignorer' onclick='return setEditMode(3)' style='margin:0px 0px 0px 0px' title='Ignore la ligne de pillage'/>" +
        "<td colspan='1' align='center'>" +
        "<a href='#' onclick='return setEditMode(4)' id='buttonleft' class='tooltip ' title='<-'><-</a>" +
        "<td colspan='1' align='center'>" +
        "<a href='#' onclick='return setEditMode(5)' id='buttonright' class='tooltip ' title='->'>-></a>" +
        "<td colspan='1' align='center'>" +
        "<input class='btn tooltip' type='button' id='autoToggle' value='Iniciar Auto' onclick='toggleAutoFarm()' style='margin:0px 0px 0px 0px' title='Inicia/Para a automação de farming'/>" +
        "</tr>" +
        "<tr id='keysRow'>" +
        "<th colspan='1'>Touche:<td align='center'>" +
        String.fromCharCode(keycodes.a) + "<td align='center'>" + String.fromCharCode(keycodes.b) + "<td align='center'>" + String.fromCharCode(
            keycodes.c) + "<td align='center'>" + String.fromCharCode(keycodes.skip) +
        "<td>" + String.fromCharCode(keycodes.left) + "<td>" + String.fromCharCode(keycodes.right) + "</tr></tbody></table></div>"));
    $('#divFAPress').append($(
        "<table id='faKeySettings' class='vis' style='width:100%' cellspacing='0'><thead><tr><th colspan='3'><em>ParamÃ¨tres</em> - <a href'#' id='showSettings' onclick='return doSettings()'>Cacher</a></thead><tbody id='bodySettings'><tr><td colspan='1' align='center'><input type='checkbox' id='chbLoadPages' onclick='return chkBoxClick($(this).is(\":checked\"), " +
        pos.s.loadp + ")'> <b>Charger les pages</b><td colspan='4'>De <input type='text' id='txtFirstPage' size='2' maxlength='2' value='" + userset[pos.s.fp] +
        "' onchange='onlyNum(this);' disabled> Ã  <input type='text' id='txtLastPage' size='2' maxlength='2' value='" + userset[pos.s.lp] +
        "' onchange='onlyNum(this);' disabled><tr><td align='center'><b>Cacher</b><td><input type='checkbox' id='chbRemAxes' onclick='return chkBoxClick($(this).is(\":checked\"), " + pos.s.remaxes +
        ")'> <img src='https://media.innogamescdn.com/com_DS_FR/Scripts/Pillage/attacks.png' title='Attaques en cours (spÃ©cifier Ã  partir de combien)' alt='' class='tooltip' /> Attaques en cours <input type='text' id='txtNbAttacks' size='2' maxlength='2' value='" + userset[pos.s.MaxNbAttacks] + "' onchange='onlyNum(this)' disabled><input type='checkbox' id='chbRemBlue' onclick='return chkBoxClick($(this).is(\":checked\"), " +
        pos.s.remblue +
        ")'> <img src='https://media.innogamescdn.com/com_DS_FR/Scripts/Pillage/blue.png' title='EspionnÃ©' alt='' class='tooltip' /> EspionnÃ© <br><input type='checkbox' id='chbRemGreen' onclick='return chkBoxClick($(this).is(\":checked\"), " +
        pos.s.remgreen +
        ")'> <img src='https://media.innogamescdn.com/com_DS_FR/Scripts/Pillage/green.png' title='Victoire Totale' alt='' class='tooltip' /> Victoire Totale <br><input type='checkbox' id='chbRemYellow' onclick='return chkBoxClick($(this).is(\":checked\"), " +
        pos.s.remyellow +
        ")'> <img src='https://media.innogamescdn.com/com_DS_FR/Scripts/Pillage/yellow.png' title='Pertes' alt='' class='tooltip' /> Pertes <br><input type='checkbox' id='chbRemRedYellow' onclick='return chkBoxClick($(this).is(\":checked\"), " +
        pos.s.remredy +
        ")'> <img src='https://media.innogamescdn.com/com_DS_FR/Scripts/Pillage/red_yellow.png' title='Vaincu, mais bÃ¢timent(s) endommagÃ©(s)' alt='' class='tooltip' /> Vaincu, mais endommagÃ©s<br><input type='checkbox' id='chbRemRedBlue' onclick='return chkBoxClick($(this).is(\":checked\"), " +
        pos.s.remredb +
        ")'> <img src='https://media.innogamescdn.com/com_DS_FR/Scripts/Pillage/red_blue.png' title='Vaincu, mais espionnÃ©' alt='' class='tooltip' /> Vaincu, mais espionnÃ©<br><input type='checkbox' id='chbRemRed' onclick='return chkBoxClick($(this).is(\":checked\"), " +
        pos.s.remred +
        ")'> <img src='https://media.innogamescdn.com/com_DS_FR/Scripts/Pillage/red.png' title='DÃ©fait' alt='' class='tooltip' /> DÃ©fait</tr><tr><td align='right' colspan='2'><input type='button' class='btn' id='btnSettingsReset' value='Reset' onclick='resetCookie(); UI.SuccessMessage(\"Reset effectuÃƒÆ’Ã‚Â©\",1000); run(); return false;'><input type='button' class='btn' id='btnSettingsApply' value='Appliquer' onclick='saveSettings(); run(); return false'><input type='button' class='btn' id='btnSettingsSave' value='Sauvegarder' onclick='saveSettings(); return false;'></tr></tbody></table>"
    ));

    if (userset[pos.s.remred] === "1") $('#chbRemRed').prop("checked", true);
    if (userset[pos.s.remredy] === "1") $('#chbRemRedYellow').prop("checked", true);
    if (userset[pos.s.remredb] === "1") $('#chbRemRedBlue').prop("checked", true);
    if (userset[pos.s.remgreen] === "1") $('#chbRemGreen').prop("checked", true);
    if (userset[pos.s.remblue] === "1") $('#chbRemBlue').prop("checked", true);
    if (userset[pos.s.remaxes] === "1") {
        $('#chbRemAxes').prop("checked", true);
        $('#txtNbAttacks').prop("disabled", false);
    }
    if (userset[pos.s.remyellow] === "1") $('#chbRemYellow').prop("checked", true);
    if (userset[pos.s.loadp] === "1") {
        $('#chbLoadPages').prop("checked", true);
        $('#txtFirstPage').prop("disabled", false);
        $('#txtLastPage').prop("disabled", false);
    }
}

/****************************Hide/Show Script Settings****************************/
function doSettings() {
    if ($('#showSettings').html().indexOf('Cacher') != -1) {
        $('#bodySettings').hide();
        $('#showSettings').html('Voir');
    } else {
        $('#bodySettings').show();
        $('#showSettings').html('Cacher');
    }
}

/****************************Settings Related functions****************************/
function chkBoxClick(yolo, index) {
    if (yolo) {
        userset[index] = "1";
        if (index === pos.s.loadp) {
            $('#txtFirstPage').prop("disabled", false);
            $('#txtLastPage').prop("disabled", false);
        } else if (index === pos.s.remaxes) {
            $('#txtNbAttacks').prop("disabled", false);
        }
    } else {
        userset[index] = "0";
        if (index === pos.s.loadp) {
            $('#txtFirstPage').prop("disabled", true);
            $('#txtLastPage').prop("disabled", true);
        } else if (index === pos.s.remaxes) {
            $('#txtNbAttacks').prop("disabled", true);
        }
    }
    setCookie(cookieName, "{" + version + "}[" + userkeys.toString() + "][" + userset.toString() + "]", 180);
}

function saveSettings() {
    userset[pos.s.fp] = $('#txtFirstPage').val();
    userset[pos.s.lp] = $('#txtLastPage').val();
    userset[pos.s.MaxNbAttacks] = $('#txtNbAttacks').val();
    setCookie(cookieName, "{" + version + "}[" + userkeys.toString() + "][" + userset.toString() + "]", 180);
    UI.SuccessMessage("ParamÃƒÆ’Ã‚Â¨tres sauvÃƒÆ’Ã‚Â©s", 1000);
}

function setEditMode(let) {
    keyedits.a = false;
    keyedits.b = false;
    keyedits.c = false;
    keyedits.skip = false;
    keyedits.left = false;
    keyedits.right = false;
    if (let == 0) keyedits.a = true;
    else if (let == 1) keyedits.b = true;
    else if (let == 2) keyedits.c = true;
    else if (let == 3) keyedits.skip = true;
    else if (let == 4) keyedits.left = true;
    else if (let == 5) keyedits.right = true;
    return true;
}

/****************************Cookies Handling****************************/
function checkCookie() {
    if (!($.cookie(cookieName))) return false;
    else return true;
}

function setCookie(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
    var expires = "expires=" + d.toGMTString();
    document.cookie = cname + "=" + cvalue + "; " + expires + "; path=/";
}

function resetCookie() {
    $.cookie(cookieName, null);
    userkeys = [65, 66, 67, 74, 39, 37, 90];
    userset = ["distance", "asc", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"];
    setCookie(cookieName, "{" + version + "}[" + userkeys.toString() + "][" + userset.toString() + "]", 180);
}

/****************************Update Function****************************/
function refresh() {
    userkeys = [keycodes.a, keycodes.b, keycodes.c, keycodes.skip, keycodes.right, keycodes.left, keycodes.master];
    setCookie(cookieName, "{" + version + "}[" + userkeys.toString() + "][" + userset.toString() + "]", 180);
    setEditMode(10);
    $('#divFAPress').remove();
    addTable();
    doSettings();
}

/****************************Unit Sender****************************/
function setOnclick(button) {
    var clickFunction = button.find('a').attr('onclick');
    if (typeof clickFunction != 'undefined') {
        var parameters = clickFunction.slice(clickFunction.indexOf("(") + 1, clickFunction.indexOf(")"));
        var eachParameter = parameters.split(",");
        if (clickFunction.indexOf("FromReport") == -1) {
            button.find('a').attr('onclick', 'return customSendUnits(' + parameters + ', $(this))');
        } else {
            button.find('a').attr('onclick', 'return customSendUnitsFromReport(' + parameters + '))');
        }
    }
}

function customSendUnits(link, target_village, template_id, button) {
    var lastbutton = button;
    var row = button.closest("tr");
    button.closest("tr").remove();
    link = $(link);
    if (link.hasClass('farm_
