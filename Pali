/*
 * Script Name: KNIGHT TRAINING AUTO
 * Version: v1.2
 * Last Updated: 2025-02-24
 * Author: K I N G S
 * Author Contact: +55 48-98824-2773
 */

/*--------------------------------------------------------------------------------------
 * This script can NOT be cloned and modified without permission from the script author.
 --------------------------------------------------------------------------------------*/

// Função para carregar seleções salvas
function loadKnightSelections() {
    return JSON.parse(localStorage.getItem('knightSelections') || '{}');
}

// Função para salvar seleções
function saveKnightSelections(selections) {
    localStorage.setItem('knightSelections', JSON.stringify(selections));
}

// Função principal
(function() {
    // HTML do diálogo
    let $html = `<h3 align="center">Knight Training Auto</h3>
    <div class="info_box">
        <div class="content">Select knights and training duration:</div>
    </div>
    <table width="100%">
        <tbody>
            <tr>
                <td colspan="2">
                    <div class="time">
                        <select id="trainDuration">
                            ${BuildingStatue.knights[Object.keys(BuildingStatue.knights)[0]].usable_regimens.map((el, i) => 
                                `<option value="${i}">${String(Math.floor(el.duration / 3600)).padStart(2, '0')}:${String(Math.floor((el.duration % 3600) / 60)).padStart(2, '0')}:${String(el.duration % 60).padStart(2, '0')}</option>`
                            ).join('')}
                        </select>
                    </div>
                </td>
            </tr>`;

    // Adiciona checkbox para cada paladino
    const selections = loadKnightSelections();
    Object.keys(BuildingStatue.knights).forEach((knightId, index) => {
        const knight = BuildingStatue.knights[knightId];
        $html += `
            <tr>
                <td>
                    <input type="checkbox" class="knight-select" data-knight="${knight.id}" 
                        ${selections[knight.id] ? 'checked' : ''}>
                    ${knight.name}
                </td>
            </tr>`;
    });

    $html += `
        </tbody>
    </table>
    <br>
    <small>
        <strong>
            Knight Training Auto v1.2 by<span style="color: red"> K I N G S </span>
        </strong>
    </small>`;

    // Mostra o diálogo
    Dialog.show('KnightsAuto', $html);

    // Carrega duração salva
    const savedDuration = localStorage.getItem('trainDuration') || 0;
    $('#trainDuration').val(savedDuration);

    // Evento para salvar duração
    $('#trainDuration').on('change', function() {
        localStorage.setItem('trainDuration', this.value);
    });

    // Evento para checkboxes
    $('.knight-select').on('change', function() {
        const knightId = $(this).data('knight');
        const isChecked = $(this).is(':checked');
        
        // Atualiza seleções salvas
        const currentSelections = loadKnightSelections();
        if (isChecked) {
            currentSelections[knightId] = true;
        } else {
            delete currentSelections[knightId];
        }
        saveKnightSelections(currentSelections);

        // Inicia treinamento automático se marcado
        if (isChecked) {
            startTraining(knightId);
        }
    });

    // Função para iniciar treinamento
    function startTraining(knightId) {
        const durationIndex = Number($('#trainDuration').val());
        const knight = Object.values(BuildingStatue.knights).find(k => k.id === knightId);
        
        TribalWars.post(
            game_data.link_base.replace('amp;screen=', '') + 'screen=statue&ajaxaction=regimen',
            null,
            {
                knight: knightId,
                regimen: knight.usable_regimens[durationIndex].id,
            },
            function() {
                UI.SuccessMessage(`Training started for knight ${knight.name}`);
                // Agenda próximo treinamento
                setTimeout(() => {
                    if (loadKnightSelections()[knightId]) {
                        startTraining(knightId);
                    }
                }, knight.usable_regimens[durationIndex].duration * 1000);
            },
            function(r) {
                console.error(r);
                UI.ErrorMessage(`Failed to start training for ${knight.name}`);
            }
        );
    }

    // Inicia treinamento automático para todos os paladinos já selecionados
    Object.keys(selections).forEach(knightId => {
        if (selections[knightId]) {
            startTraining(knightId);
        }
    });
})();

// Executa o script em qualquer tela
if (!window.location.href.includes('statue&mode=overview')) {
    UI.InfoMessage('Knight Training Auto running in background');
}
